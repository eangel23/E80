---
title: Lab 2 Prelab Help Sheet
---

This help sheet is not going to be as comprehensive as the prelab help sheet for lab 1, and next week will be even less thorough.  Part of the goal fo this class is for you to be able to devise prelab activities on your own.  So if you're running out of ideas for things to do, please review last week's help sheet.  

## Reading and Reference
- [ ] Watch lecture videos.
- [ ] Read the lab.
- [ ] Flag parts of the lab that didn't make sense for discussion with your team or a prof.
- [ ] Read the submission sheet and notice:
  1. What are the deliverables? 
  2. What are the specifications on those deliverables?
- [ ] Read the "Additional Information about Accuracy in Multimeters" article
- [ ] Read "Auntie Sparks Guide to Breadboarding"
- [ ] Read "Uncle Sparky's Guide to Voltage, Current and Resistance Measurements"

## Software



## Statistics

## Calculations

# OLD STUFF

Here are some ideas of useful prelab activities.  There are a lot, so it makes sense to apportion them among your team.  However, some activities should be completed by everyone. Watching lecture videos is a good example.

## Reading and Reference

- [ ] Watch lecture videos.
- [ ] Read the lab.
- [ ] Flag parts of the lab that didn't make sense for discussion with your team or a prof.
- [ ] Read the submission sheet and notice:
  1. What are the deliverables? 
  2. What are the specifications on those deliverables?
- [ ] Read the motherboard manual.
- [ ] Read the motherboard assembly guide.
- [ ] Read and answer all of the safety questions.
- [ ] Read the lab overview and note safety procedures and appropriate attire.

## Software

- [ ] Double check that the E80 Git repo is available and working.
- [ ] Test compile `E80_Lab_01.ino`.
- [ ] Write a version of `E80_Lab_01.ino` for testing motors and test compile it.
- [ ] Write a version of `E80_lab_01.ino` for running the obstacle course and test compile it.
- [ ] Import the sample `INF` and `BIN` file data using `logreader.m`.
- [ ] Write software that will generate acceleation plots in Matlab based on the `logreader.m` sample data.

## Statistics

- [ ] Write code to find the mean of a dataset in Matlab.
- [ ] Write code to find the standard deviation of a dataset in Matlab.
- [ ] Write code to conduct a T-test for two datasets in Matlab.
- [ ] Make sure you understand the math behind means and standard deviations.
- [ ] Make sure you understand the math behind T tests (which isn't in the videos so you may have to dig through old notes or the internet).

## Mechanical

- [ ] Read all the robot assembly instructions.  Verify that you understand:
  1. Frame modifications, 
  2. Box modifications, 
  3. Drill hole locations
  4. Drilling procedures.
  5. Penetrator assembly (are you clear on the parts of the bolt, the gasket?)
- [ ] Make some sketches of how you expect the robot to look during various parts of the assembly process (and how it is changing relative to E79) to test your understanding.
- [ ] What do you expect the buoyant force of your robot to be?
- [ ] What ballast mass will make your robot neutrally buoyant?
- [ ] How many ballast plates do you think that will take?
- [ ] What tools do I have to measure masses in lab anyway?

## Results and E79 Theory

- [ ] Make a plan for how your team will split its time in lab.
- [ ] How are you going to find the size of one Teensy unit?  Can you write software (or a spreadsheet) to do that?
- [ ] Manipulate the E79 equation so it predicts peak acceleration from rest.
- [ ] What shape do you expect for an acceleration curve produced by the E79  governing equation after a step in thrust?  How might it get messed up in the real world?
- [ ] Write up the math parts of your submission sheet so that you can just paste in results in lab.